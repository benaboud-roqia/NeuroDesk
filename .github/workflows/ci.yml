name: 🚀 CI/CD - NeuroDesktop

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test Frontend
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📁 Change to frontend directory
      run: cd frontend
      
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🧪 Run tests
      run: npm test -- --coverage --watchAll=false
      
    - name: 🔍 Run linting
      run: npm run lint
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 📊 Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  # Test Backend
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: 📁 Change to backend directory
      run: cd backend
      
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🧪 Run tests
      run: npm test
      
    - name: 🔍 Run linting
      run: npm run lint

  # Security audit
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 🔒 Audit frontend dependencies
      run: |
        cd frontend
        npm audit --audit-level=moderate
        
    - name: 🔒 Audit backend dependencies
      run: |
        cd backend
        npm audit --audit-level=moderate

  # Build and Deploy (only on main branch)
  deploy:
    needs: [test-frontend, test-backend, security-audit]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 🏗️ Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: 🏗️ Build backend
      run: |
        cd backend
        npm ci
        
    - name: 📦 Create release artifacts
      run: |
        mkdir -p dist
        cp -r frontend/build dist/frontend
        cp -r backend dist/backend
        cp README.md dist/
        cp LICENSE dist/
        
    - name: 📤 Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: neurodesktop-release
        path: dist/

  # Notify on success
  notify-success:
    needs: [deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 🎉 Notify success
      run: |
        echo "✅ NeuroDesktop build successful!"
        echo "🚀 Ready for deployment"
        echo "📦 Artifacts available in GitHub Actions"

  # Notify on failure
  notify-failure:
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: ❌ Notify failure
      run: |
        echo "❌ NeuroDesktop build failed!"
        echo "🔍 Check the logs for more details" 